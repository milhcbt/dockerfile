#!/bin/bash -e


# Configure Kafka Variable
KAFKA_PORT=${KAFKA_PORT:-9092}
KAFKA_BROKER_ID=${KAFKA_BROKER_ID:-$(cat /dev/urandom | LC_CTYPE=C tr -dc '0-9' | fold -w 256 | head -n 1 |sed -e 's/^0*//' | head -c 3)}
KAFKA_LOG_DIRS=${KAFKA_LOG_DIRS:-"/tmp/kafka/logs/${HOSTNAME}"}

export KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
export KAFKA_ADVERTISED_HOST_NAME=${HOSTNAME}
export KAFKA_ADVERTISED_PORT=${KAFKA_PORT}
export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://${HOSTNAME}:${KAFKA_PORT}"
export KAFKA_LISTENERS="PLAINTEXT://0.0.0.0:${KAFKA_PORT}"
export KAFKA_LOG_DIRS=${KAFKA_LOG_DIRS}

if [[ -z "$KAFKA_ZOOKEEPER_CONNECT" ]]; then
  echo "Configuring Zookeeper Server"
  /usr/local/docker/bin/configure-zookeeper

  echo "Running Zookeeper Server"
  zookeeper-server-start.sh /opt/kafka/config/zookeeper.properties &
  
  echo "Connecting to Zookeeper Server"
  while ! nc -z 127.0.0.1 2181
  do
    echo "$(date) - Trying to Connect to Zookeeper Server at 127.0.0.1:2181..."
    sleep 1
  done
  echo "Zookeeper Server Connected Successfully"

  export KAFKA_ZOOKEEPER_CONNECT="127.0.0.1:2181"
else
  KAFKA_ZOOKEEPER_HOST=`echo ${KAFKA_ZOOKEEPER_CONNECT} | awk -F':' '{print $1}'`
  KAFKA_ZOOKEEPER_PORT=`echo ${KAFKA_ZOOKEEPER_CONNECT} | awk -F':' '{print $2}'`

  echo "Connecting to Zookeeper Server"
  while ! nc -z ${KAFKA_ZOOKEEPER_HOST} ${KAFKA_ZOOKEEPER_PORT}
  do
    echo "$(date) - Trying to Connect to Zookeeper Server at ${KAFKA_ZOOKEEPER_HOST}:${KAFKA_ZOOKEEPER_PORT}..."
    sleep 1
  done
  echo "Zookeeper Server Connected Successfully"
fi


# Parsing Environment Variable
echo "Configuring Dynamic Configuration"
for TEMP_ENV_KAFKA in `env`
do
  if [[ $TEMP_ENV_KAFKA =~ ^KAFKA_ && ! $TEMP_ENV_KAFKA =~ ^KAFKA_HOME ]]; then
    KAFKA_ENV_NAME=`echo "${TEMP_ENV_KAFKA}" | sed -r "s/KAFKA_(.*)=.*/\1/g" | tr '[:upper:]' '[:lower:]' | tr _ .`
    KAFKA_ENV_VAR=`echo "$TEMP_ENV_KAFKA" | sed -r "s/(.*)=.*/\1/g"`

    echo "- $KAFKA_ENV_NAME=${!KAFKA_ENV_VAR}"
    if egrep -q "(^|^#)$KAFKA_ENV_NAME=" /opt/kafka/config/server.properties; then
      # Note that no config values may contain an '@' char    
      sed -r -i "s@(^|^#)($KAFKA_ENV_NAME)=(.*)@\2=${!KAFKA_ENV_VAR}@g" /opt/kafka/config/server.properties
    else
      echo "$KAFKA_ENV_NAME=${!KAFKA_ENV_VAR}" >> /opt/kafka/config/server.properties
    fi
  fi
done


# Configure Topics
if [[ -n "$KAFKA_CREATE_TOPICS" ]]; then
  /usr/local/docker/bin/configure-topics &
fi


# Create kafka Log Directory
mkdir -p ${KAFKA_LOG_DIRS}


exit 0
