#!/bin/bash -e


# Add Custom UserID as "User" User
if [ "$(id -u)" != "0" ]; then
  sed "s/^user:\(.*\):[0-9]\+:\([0-9]\+\):.*:\(.*:.*\)/user:\1:$(id -u):\2:User:\3/g" < /etc/passwd > /tmp/passwd \
  && cat /tmp/passwd > /etc/passwd \
  && rm -f /tmp/passwd
fi


# Export ElasticSearch Command
if [ "${1:0:1}" = '-' ]; then
	set -- elasticsearch "$@"
fi


# Configure ElasticSearch Variable
ES_DOMAIN=`hostname -d`
ES_HOST_NAME=`hostname -s`
if [[ -n $ES_DOMAIN ]]; then
  ES_NODE_NAME=${ES_NODE_NAME:-"${ES_HOST_NAME}.${ES_DOMAIN}"}
else
  ES_NODE_NAME=${ES_NODE_NAME:-"${ES_HOST_NAME}"}
fi
ES_MASTER_COUNT=${ES_MASTER_COUNT:-1}
ES_MASTER_AUTO_QUORUM=${ES_MASTER_AUTO_QUORUM:-"true"}

if [ $ES_MASTER_COUNT -gt 1 ]; then
  if [[ $ES_MASTER_AUTO_QUORUM == "true" ]]; then
    if [ $ES_MASTER_COUNT -gt 2 ]; then
      ES_MASTER_HALF=$(($ES_MASTER_COUNT/2))
      ES_MASTER_QUORUM=$((($ES_MASTER_COUNT/$ES_MASTER_HALF)+1))
    else
      ES_MASTER_QUORUM=${ES_MASTER_COUNT}
    if
    ES_ARGS="-Ediscovery.zen.minimum_master_nodes=${ES_MASTER_QUORUM} "
  fi

  if [ `echo ${ES_ARGS} | grep node.master | wc -l` -eq 1 ]; then

  fi
fi

ES_ARGS="-Enode.name=${ES_NODE_NAME} -Ebootstrap.memory_lock=false -Ehttp.enabled=true -Enetwork.host=0.0.0.0 ${ES_ARGS}"
export ES_JAVA_OPTS="-Des.cgroups.hierarchy.override=/ ${ES_JAVA_OPTS}"


# Determine ElasticSearch X-Pack
if elasticsearch-plugin list -s | grep -q x-pack; then
  if [[ -n "$ES_PASSWORD" ]]; then
    [[ -f ${ES_HOME}/config/elasticsearch.keystore ]] || elasticsearch-keystore create
    echo "$ES_PASSWORD" | elasticsearch-keystore add -x 'bootstrap.password'
  fi
fi


# Execute Everything from Entries
if [ "$(id -u)" != "0" ]; then
  exec "$@" "${ES_ARGS[@]}"
else
  su-exec user "$@" "${ES_ARGS[@]}"
fi
