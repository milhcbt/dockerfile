#!/bin/bash

set -e

echo "--------------------------------------------------"
echo "Dockerfile Build Tools"
echo "Email: dimas.restu@student.upi.edu"
echo "--------------------------------------------------"

echo ""
echo "[1] Installing Apt Transport, Fonts, Timzone Data, & Unzip"
echo "--------------------------------------------------"
echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections \
  && apt-get -y -o Acquire::Check-Valid-Until=false update \
  && apt-get -y -o Acquire::Check-Valid-Until=false install \
      apt-transport-https \
      ttf-mscorefonts-installer \
      ttf-dejavu \
      tzdata \
      unzip \
  && apt-get -y -o Acquire::Check-Valid-Until=false autoremove \
  && apt-get -y -o Acquire::Check-Valid-Until=false clean
echo "--------------------------------------------------"


echo ""
echo "[2] Installing Oracle JRE"
echo "--------------------------------------------------"
curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header "Cookie: oraclelicense=accept-securebackup-cookie;" \
  http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/server-jre-8u151-linux-x64.tar.gz | tar xz -C /tmp \
  && mkdir -p "${JAVA_HOME}" \
  && mv /tmp/jdk1.8.0_151/* "${JAVA_HOME}" \
  && rm -rf /tmp/* /var/tmp/*

curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header "Cookie: oraclelicense=accept-securebackup-cookie;" \
  http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip -o /tmp/jce_policy-8.zip \
  && unzip /tmp/jce_policy-8.zip -d /tmp \
  && cp -R /tmp/UnlimitedJCEPolicyJDK8/*.jar "${JAVA_HOME}"/jre/lib/security/ \
  && rm -rf /tmp/* /var/tmp/*

update-alternatives --install "/usr/bin/extcheck" "extcheck" "$JAVA_HOME/bin/extcheck" 1 \
  && update-alternatives --install "/usr/bin/idlj" "idlj" "$JAVA_HOME/bin/idlj" 1 \
  && update-alternatives --install "/usr/bin/jar" "jar" "$JAVA_HOME/bin/jar" 1 \
  && update-alternatives --install "/usr/bin/jarsigner" "jarsigner" "$JAVA_HOME/bin/jarsigner" 1 \
  && update-alternatives --install "/usr/bin/java" "java" "$JAVA_HOME/bin/java" 1 \
  && update-alternatives --install "/usr/bin/javac" "javac" "$JAVA_HOME/bin/javac" 1 \
  && update-alternatives --install "/usr/bin/jcmd" "jcmd" "$JAVA_HOME/bin/jcmd" 1 \
  && update-alternatives --install "/usr/bin/jdeps" "jdeps" "$JAVA_HOME/bin/jdeps" 1 \
  && update-alternatives --install "/usr/bin/jjs" "jjs" "$JAVA_HOME/bin/jjs" 1 \
  && update-alternatives --install "/usr/bin/jps" "jps" "$JAVA_HOME/bin/jps" 1 \
  && update-alternatives --install "/usr/bin/jrunscript" "jrunscript" "$JAVA_HOME/bin/jrunscript" 1 \
  && update-alternatives --install "/usr/bin/keytool" "keytool" "$JAVA_HOME/bin/keytool" 1 \
  && update-alternatives --install "/usr/bin/native2ascii" "native2ascii" "$JAVA_HOME/bin/native2ascii" 1 \
  && update-alternatives --install "/usr/bin/orbd" "orbd" "$JAVA_HOME/bin/orbd" 1 \
  && update-alternatives --install "/usr/bin/pack200" "pack200" "$JAVA_HOME/bin/pack200" 1 \
  && update-alternatives --install "/usr/bin/rmic" "rmic" "$JAVA_HOME/bin/rmic" 1 \
  && update-alternatives --install "/usr/bin/rmid" "rmid" "$JAVA_HOME/bin/rmid" 1 \
  && update-alternatives --install "/usr/bin/rmiregistry" "rmiregistry" "$JAVA_HOME/bin/rmiregistry" 1 \
  && update-alternatives --install "/usr/bin/schemagen" "schemagen" "$JAVA_HOME/bin/schemagen" 1 \
  && update-alternatives --install "/usr/bin/servertool" "servertool" "$JAVA_HOME/bin/servertool" 1 \
  && update-alternatives --install "/usr/bin/tnameserv" "tnameserv" "$JAVA_HOME/bin/tnameserv" 1 \
  && update-alternatives --install "/usr/bin/unpack200" "unpack200" "$JAVA_HOME/bin/unpack200" 1 \
  && update-alternatives --install "/usr/bin/wsgen" "wsgen" "$JAVA_HOME/bin/wsgen" 1 \
  && update-alternatives --install "/usr/bin/wsimport" "wsimport" "$JAVA_HOME/bin/wsimport" 1 \
  && update-alternatives --install "/usr/bin/xjc" "xjc" "$JAVA_HOME/bin/xjc" 1

update-alternatives --set extcheck "$JAVA_HOME/bin/extcheck" \
  && update-alternatives --set idlj "$JAVA_HOME/bin/idlj" \
  && update-alternatives --set jar "$JAVA_HOME/bin/jar" \
  && update-alternatives --set jarsigner "$JAVA_HOME/bin/jarsigner" \
  && update-alternatives --set java "$JAVA_HOME/bin/java" \
  && update-alternatives --set javac "$JAVA_HOME/bin/javac" \
  && update-alternatives --set jcmd "$JAVA_HOME/bin/jcmd" \
  && update-alternatives --set jdeps "$JAVA_HOME/bin/jdeps" \
  && update-alternatives --set jjs "$JAVA_HOME/bin/jjs" \
  && update-alternatives --set jps "$JAVA_HOME/bin/jps" \
  && update-alternatives --set jrunscript "$JAVA_HOME/bin/jrunscript" \
  && update-alternatives --set keytool "$JAVA_HOME/bin/keytool" \
  && update-alternatives --set native2ascii "$JAVA_HOME/bin/native2ascii" \
  && update-alternatives --set orbd "$JAVA_HOME/bin/orbd" \
  && update-alternatives --set pack200 "$JAVA_HOME/bin/pack200" \
  && update-alternatives --set rmic "$JAVA_HOME/bin/rmic" \
  && update-alternatives --set rmid "$JAVA_HOME/bin/rmid" \
  && update-alternatives --set rmiregistry "$JAVA_HOME/bin/rmiregistry" \
  && update-alternatives --set schemagen "$JAVA_HOME/bin/schemagen" \
  && update-alternatives --set servertool "$JAVA_HOME/bin/servertool" \
  && update-alternatives --set tnameserv "$JAVA_HOME/bin/tnameserv" \
  && update-alternatives --set unpack200 "$JAVA_HOME/bin/unpack200" \
  && update-alternatives --set wsgen "$JAVA_HOME/bin/wsgen" \
  && update-alternatives --set wsimport "$JAVA_HOME/bin/wsimport" \
  && update-alternatives --set xjc "$JAVA_HOME/bin/xjc"

update-alternatives --get-selections | awk -v home="$(readlink -f $JAVA_HOME)" 'index($3, home) == 1 { $2 = "manual"; print | "update-alternatives --set-selections" }'; \
update-alternatives --query java | grep -q 'Status: manual'
echo "--------------------------------------------------"


echo ""
echo "[3] Configuring Oracle JRE"
echo "--------------------------------------------------"
ln -sf $JAVA_HOME /docker-java-home \
  && { \
       echo '#!/bin/bash'; \
       echo 'set -e'; \
       echo; \
       echo 'dirname "$(dirname "$(readlink -f "$(which javac || which java)")")"'; \
	   } > /usr/local/bin/docker-java-home \
	&& chmod +x /usr/local/bin/docker-java-home
echo "--------------------------------------------------"

exit 0
